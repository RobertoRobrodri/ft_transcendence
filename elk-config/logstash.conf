input {
  tcp {
    port => 5000
    codec => json_lines {
      target => "json"
    }
  }
  file {
    path => "/var/log/services/db/postgresql-*.log"
    start_position => "beginning"
    type => "postgresql"
    add_field => { "service" => "postgresql" }
  }
}

filter {
  if [type] == "postgresql" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{DATA:timezone} \[%{NUMBER:pid}\] %{WORD:loglevel}:  %{GREEDYDATA:log_message}" }
    }
    mutate {
      replace => { "message" => "postgresql %{log_message}" }
      remove_field => ["log_message"]
    }
  }
}


output {
  if [service] == "postgresql" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "postgresql-%{+YYYY.MM.dd}"  # Formato de Ã­ndice para logs de PostgreSQL
      user => "elastic"
      password => "changeme"
    }
  }
  else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "%{[json][tags]}-%{+YYYY.MM.dd}" # Crea Ã­ndices basados en las etiquetas y la fecha django //django-*
      user => "elastic" # TODO habilitar seguridad
      password => "changeme" # TODO habilitar seguridad
    }
  }
  stdout {
    codec => rubydebug
  }
}
