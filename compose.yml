version: "3"

services:
  nginx:
    build: ./front/
    container_name: nginx
    ports:
      - 443:443
    volumes:
      - profile_pictures:/media
    networks:
      - transcendence
    depends_on:
      - django

  django:
    build: ./back/
    container_name: django
    volumes:
      - profile_pictures:/core/media
      - truffle:/core/contract/build/contracts
    # Please only access directly to django if you want to go admin or swagger dashboard 
    ports:
      - 8000:8000
    networks:
      - transcendence
    env_file:
      - .env
    depends_on:
      - db

  db:
    build: ./db/
    container_name: db
    volumes:
      - ddbb:/var/lib/postgresql/data
    networks:
      - transcendence
    env_file:
      - .env

  redis:
    image: "redis:7.2.3-alpine"
    container_name: "redis"
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
  
# Blockchain
  ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: ganache
    volumes:
      - ganache:/ganache_data
    ports:
        - '8545:8545'
    networks:
      - transcendence
    entrypoint:
      - node
      - /app/ganache-core.docker.cli.js
      - --deterministic                  # Always use same address and keys
      - --db=/ganache_data               # Store data to connect previous contract
      - --mnemonic                       # Seed
      - 'desert whisper reunion modify taxi energy update mention awful foam achieve visa'
      - --networkId                      # Ganache network id
      - '5777'

  contract-deployer:
    image: contract-deployer:latest
    container_name: contract-deployer
    build: ./blockchain
    depends_on:
      - ganache
    volumes:
      - truffle:/core/contract/build/contracts
    networks:
      - transcendence
      
# Monitoring
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prom_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/'
      - '--web.external-url=https://localhost/monitoring/prometheus'
    networks:
      - transcendence
  
  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--web.route-prefix=/'
      - '--web.external-url=https://localhost/monitoring/alertmanager'
    networks:
      - transcendence


# Django dashboard 17658
# Postgres dashboard 9628
# Nginx dashboard 12708
  grafana:
    image: grafana/grafana:10.3.1
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - graf_data:/var/lib/grafana
    networks:
      - transcendence
    environment:
    #TODO Secure this credentials, for now development doesnt matter
      - GF_SECURITY_ADMIN_USER=test-user
      - GF_SECURITY_ADMIN_PASSWORD=test
      - GF_SERVER_ROOT_URL=https://localhost/monitoring/grafana/
    depends_on:
      - prometheus

  # Oficial exporters https://prometheus.io/docs/instrumenting/exporters/
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter
    networks:
      - transcendence
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@db:5432/postgres?sslmode=disable
    depends_on:
      - prometheus
      - db

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: nginx_exporter
    networks:
      - transcendence
    command:
      - --nginx.scrape-uri=https://nginx:443/nginx_status
    depends_on:
      - prometheus
      - nginx

networks:
  transcendence:
    name: transcendence
    driver: bridge

volumes:
  ddbb:
  profile_pictures:
  prom_data:
  graf_data:
  truffle:
  ganache:
